s result=
a 100
i 8
a 20
s Enter_number: 
a 40
i 15
a 1000
i 0 	    # mem[1000]=0
i 1 	    # mem[1004]=1
a 1008 	    # startAddr=1008
c  3 5 40   # r5=15
c 27 5 20   # вывод строки
c 22 0 2000 # ввести число в память 
c  3 0 1000 # r0=mem[1000]
c  5 0 2000 # r0-=mem[2000] ставим флаги для сравнения
c 15 1 3000 # если больше 0, то переход к 3000
c  3 3 100  # r3=8
c 27 3 0    # вывод строки
c 23 0 1004 # вывести рез=1
c 13 4500   # переход к завершению программы
a 3000
c  3 0 1000 # r0=0
c  3 1 1004 # r1=1
c  2 0 500  # mem[500]=r0
c  3 2 500  # r2=mem[500]
c  5 2 2000 # r2-=mem[2000]
c 16 1 4000 # если eax равно числу, то переход
c 20 6 5000 # если не равно, call 5000
c 13 1 3006 # jump 3006
a 5000
c  4 0 1004 # r0+=1
c  2 0  400 # mem[400]=r0
c  6 1  400 # r1*=mem[400]
c 21 6  0   # ret
a 4000
c  2 1 300 # mem[300]=r1
c  3 3 100 # r3=8
c 27 3 0 # вывод строки
c 23 0 300 # вывод mem[300]
a 4500
c 0 0 0 
b 1008 # стартовый адрес
e